/***************************************************************************
* Example sketch for the MPU9250_WE library
*
* This sketch can be used to determine the (non-auto) offsets for the MPU9250. 
* It does not use the internal offset registers.
* 
* For the gyroscope offsets just use the raw values you obtain when the module is 
* not moved.
* 
* For the accelerometer offsets turn the MPU9250 slowly(!) in all directions and find the 
* minimum and maximum raw values for all axes.
* 
* Insert the values in the corresponding setxxxOffsets() functions. 
*  
* For further information visit my blog:
*
* https://wolles-elektronikkiste.de/mpu9250-9-achsen-sensormodul-teil-1  (German)
* https://wolles-elektronikkiste.de/en/mpu9250-9-axis-sensor-module-part-1  (English)
* 
***************************************************************************/

#include <MPU9250_WE.h>
#include <Wire.h>
#define MPU9250_ADDR 0x68
#include <Adafruit_CircuitPlayground.h>
#define NEOPIX_PIN    A2
#define NUM_PIXELS    8

  int SideWaysLeft;
  int SideWaysRight;
  int Centre;

// use Adafruit_CPlay_NeoPixel to create a separate external NeoPixel strip
Adafruit_CPlay_NeoPixel strip = Adafruit_CPlay_NeoPixel(NUM_PIXELS, NEOPIX_PIN, NEO_GRB + NEO_KHZ800);

/* There are several ways to create your MPU9250 object:
 * MPU9250_WE myMPU9250 = MPU9250_WE()              -> uses Wire / I2C Address = 0x68
 * MPU9250_WE myMPU9250 = MPU9250_WE(MPU9250_ADDR)  -> uses Wire / MPU9250_ADDR
 * MPU9250_WE myMPU9250 = MPU9250_WE(&wire2)        -> uses the TwoWire object wire2 / MPU9250_ADDR
 * MPU9250_WE myMPU9250 = MPU9250_WE(&wire2, MPU9250_ADDR) -> all together
 * Successfully tested with two I2C busses on an ESP32
 */
MPU9250_WE myMPU9250 = MPU9250_WE(MPU9250_ADDR);

void setup() {

  SideWaysLeft = 0;
  SideWaysRight = 0;
  Centre = 1;

  CircuitPlayground.begin();
    strip.begin();
    strip.clear();
    strip.show();
  Serial.begin(115200);
  Wire.begin();
  if(!myMPU9250.init()){
    Serial.println("MPU9250 does not respond");
  }
  else{
    Serial.println("MPU9250 is connected");
  }

//#if defined(__AVR_ATtiny85__) && (F_CPU == 16000000)
//  clock_prescale_set(clock_div_1);
//#endif
//  // END of Trinket-specific code.
//
//  pixels.begin(); // INITIALIZE NeoPixel strip object (REQUIRED)

  /*  This is a more accurate method for calibration than the autoOffset. You have to 
   *  determine the minimum and maximum raw acceleration values of the axes determined 
   *  in the range +/- 2 g. 
   *  You call the function as follows: setAccOffsets(xMin,xMax,yMin,yMax,zMin,zMax);
   *  Use either autoOffset or setAccOffsets, not both.
   */
  //myMPU9250.setAccOffsets(-14240.0, 18220.0, -17280.0, 15590.0, -20930.0, 12080.0);

  /*  The gyroscope data is not zero, even if don't move the MPU9250. 
   *  To start at zero, you can apply offset values. These are the gyroscope raw values you obtain
   *  using the +/- 250 degrees/s range. 
   *  Use either autoOffset or setGyrOffsets, not both.
   */
  //myMPU9250.setGyrOffsets(45.0, 145.0, -105.0);

 /*  You can enable or disable the digital low pass filter (DLPF). If you disable the DLPF, you 
   *  need to select the bandwidth, which can be either 8800 or 3600 Hz. 8800 Hz has a shorter delay,
   *  but higher noise level. If DLPF is disabled, the output rate is 32 kHz.
   *  MPU9250_BW_WO_DLPF_3600 
   *  MPU9250_BW_WO_DLPF_8800
   */
  myMPU9250.enableGyrDLPF();
  //myMPU9250.disableGyrDLPF(MPU9250_BW_WO_DLPF_8800); // bandwidth without DLPF
  
  /*  Digital Low Pass Filter for the gyroscope must be enabled to choose the level. 
   *  MPU9250_DPLF_0, MPU9250_DPLF_2, ...... MPU9250_DPLF_7 
   *  
   *  DLPF    Bandwidth [Hz]   Delay [ms]   Output Rate [kHz]
   *    0         250            0.97             8
   *    1         184            2.9              1
   *    2          92            3.9              1
   *    3          41            5.9              1
   *    4          20            9.9              1
   *    5          10           17.85             1
   *    6           5           33.48             1
   *    7        3600            0.17             8
   *    
   *    You achieve lowest noise using level 6  
   */
  myMPU9250.setGyrDLPF(MPU9250_DLPF_6);  // lowest noise
  
  /*  MPU9250_GYRO_RANGE_250       250 degrees per second (default)
   *  MPU9250_GYRO_RANGE_500       500 degrees per second
   *  MPU9250_GYRO_RANGE_1000     1000 degrees per second
   *  MPU9250_GYRO_RANGE_2000     2000 degrees per second
   */
  myMPU9250.setGyrRange(MPU9250_GYRO_RANGE_250);

  /*  MPU9250_ACC_RANGE_2G      2 g   
   *  MPU9250_ACC_RANGE_4G      4 g
   *  MPU9250_ACC_RANGE_8G      8 g   
   *  MPU9250_ACC_RANGE_16G    16 g
   */
  myMPU9250.setAccRange(MPU9250_ACC_RANGE_2G);

 /*  Enable/disable the digital low pass filter for the accelerometer 
   *  If disabled the bandwidth is 1.13 kHz, delay is 0.75 ms, output rate is 4 kHz
   */
  myMPU9250.enableAccDLPF(true);

  /*  Digital low pass filter (DLPF) for the accelerometer, if enabled 
   *  MPU9250_DPLF_0, MPU9250_DPLF_2, ...... MPU9250_DPLF_7 
   *   DLPF     Bandwidth [Hz]      Delay [ms]    Output rate [kHz]
   *     0           460               1.94           1
   *     1           184               5.80           1
   *     2            92               7.80           1
   *     3            41              11.80           1
   *     4            20              19.80           1
   *     5            10              35.70           1
   *     6             5              66.96           1
   *     7           460               1.94           1
   */
  myMPU9250.setAccDLPF(MPU9250_DLPF_6);  // lowest noise

  Serial.print("Turn your MPU9250 slowly(!) in all directions to determine ");
  Serial.println(" the min/max raw acceleration values.");
  Serial.println("For the gyroscope offsets just note the gyro raw values for the unmoved sensor");
  delay(1000);
}

void loop() {
  float CPXX = CircuitPlayground.motionX()*30;
  float CPXY = CircuitPlayground.motionY()*30;
  float CPXZ = CircuitPlayground.motionZ()*30;

  xyzFloat accRaw;
  xyzFloat gyrRaw;
  xyzFloat corrAccRaw;
  xyzFloat corrGyrRaw;
  accRaw = myMPU9250.getAccRawValues();
  gyrRaw = myMPU9250.getGyrRawValues();
  corrAccRaw = myMPU9250.getCorrectedAccRawValues();
  corrGyrRaw = myMPU9250.getCorrectedGyrRawValues();



//ANGLE
if(accRaw.x > -16000 && CircuitPlayground.motionX() > -6 && accRaw.y < 9000 && accRaw.y > -11000) {
   Serial.println("turn");
      strip.clear();
      strip.show();
      CircuitPlayground.clearPixels();
          delay(50);
    CircuitPlayground.setPixelColor(5, 40,   0, 40);
    delay(50);
CircuitPlayground.clearPixels();
    delay(50);
CircuitPlayground.setPixelColor(6, 40,   0, 40);
    delay(50);
CircuitPlayground.clearPixels();
delay(50);
CircuitPlayground.setPixelColor(7, 40,   0, 40);
    delay(50);
CircuitPlayground.clearPixels();
delay(50);
CircuitPlayground.setPixelColor(8, 40,   0, 40);
    delay(50);
CircuitPlayground.clearPixels();
delay(50);
CircuitPlayground.setPixelColor(9, 40,  0, 40);
    delay(50);
CircuitPlayground.clearPixels();
    delay(50);
    CircuitPlayground.setPixelColor(0, 40,   0, 40);
        delay(50);
    CircuitPlayground.clearPixels();
    delay(50);
CircuitPlayground.setPixelColor(1, 40,   0, 40);
    delay(50);
CircuitPlayground.clearPixels();
delay(50);
CircuitPlayground.setPixelColor(2, 40,   0, 40);
    delay(50);
CircuitPlayground.clearPixels();
delay(50);
CircuitPlayground.setPixelColor(3, 40,   0, 40);
    delay(50);
CircuitPlayground.clearPixels();
delay(50);
CircuitPlayground.setPixelColor(4, 40,  0, 40);
}

//ANGLE BEND
if(accRaw.x > -16000 && CircuitPlayground.motionX() < -6 && accRaw.y < 9000 && accRaw.y > -11000) {
      strip.clear();
      strip.show();
      CircuitPlayground.clearPixels();
          delay(50);
    CircuitPlayground.setPixelColor(4, 40,   0, 40);
    delay(50);
CircuitPlayground.clearPixels();
    delay(50);
CircuitPlayground.setPixelColor(3, 40,   0, 40);
    delay(50);
CircuitPlayground.clearPixels();
delay(50);
CircuitPlayground.setPixelColor(2, 40,   0, 40);
    delay(50);
CircuitPlayground.clearPixels();
delay(50);
CircuitPlayground.setPixelColor(1, 40,   0, 40);
    delay(50);
CircuitPlayground.clearPixels();
delay(50);
CircuitPlayground.setPixelColor(0, 40,  0, 40);
    delay(50);
CircuitPlayground.clearPixels();
    delay(50);
    CircuitPlayground.setPixelColor(9, 40,   0, 40);
        delay(50);
    CircuitPlayground.clearPixels();
    delay(50);
CircuitPlayground.setPixelColor(8, 40,   0, 40);
    delay(50);
CircuitPlayground.clearPixels();
delay(50);
CircuitPlayground.setPixelColor(7, 40,   0, 40);
    delay(50);
CircuitPlayground.clearPixels();
delay(50);
CircuitPlayground.setPixelColor(6, 40,   0, 40);
    delay(50);
CircuitPlayground.clearPixels();
delay(50);
CircuitPlayground.setPixelColor(5, 40,  0, 40);
}


//NEUTRAL STRAIGHT
if(accRaw.y < 9000 && accRaw.y > -9000 && CircuitPlayground.motionY() < 7 && accRaw.x < -16000 && abs(gyrRaw.x) < 7000){

        strip.clear();
      strip.show();


        strip.setPixelColor(0,   20,   0, 20);
      delay(15);
      strip.show();
              strip.clear();
                    delay(15);
      strip.show();
  strip.setPixelColor(1,   20,   0, 20);
      delay(15);
      strip.show();
              strip.clear();
                    delay(15);
      strip.show();
  strip.setPixelColor(2,   20,   0, 20);
      delay(15);
      strip.show();
              strip.clear();
                    delay(15);
      strip.show();
  strip.setPixelColor(3,   20,   0, 20);
      delay(15);
      strip.show();
              strip.clear();
                    delay(15);
      strip.show();
  strip.setPixelColor(4,   20,   0, 20);
      delay(15);
      strip.show();
              strip.clear();
                    delay(15);
      strip.show();
  strip.setPixelColor(5,   20,   0, 20);
      delay(15);
      strip.show();
              strip.clear();
                    delay(15);
      strip.show();
  strip.setPixelColor(6,   20,   0, 20);
      delay(15);
      strip.show();
              strip.clear();
                    delay(15);
      strip.show();
  strip.setPixelColor(7,   20,   0, 20);
      strip.show();
              strip.clear();
                    delay(15);
      strip.show();
      CircuitPlayground.clearPixels();
          delay(30);
    CircuitPlayground.setPixelColor(5, 40,   0, 40);
    CircuitPlayground.setPixelColor(4, 40,  0, 40);
    delay(30);
CircuitPlayground.clearPixels();
    delay(30);
CircuitPlayground.setPixelColor(6, 40,   0, 40);
CircuitPlayground.setPixelColor(3, 40,   0, 40);
    delay(30);
CircuitPlayground.clearPixels();
delay(30);
CircuitPlayground.setPixelColor(7, 40,   0, 40);
CircuitPlayground.setPixelColor(2, 40,   0, 40);
    delay(30);
CircuitPlayground.clearPixels();
delay(30);
CircuitPlayground.setPixelColor(8, 40,   0, 40);
CircuitPlayground.setPixelColor(1, 40,   0, 40);
    delay(30);
CircuitPlayground.clearPixels();
delay(30);
CircuitPlayground.setPixelColor(9, 40,  0, 40);
    CircuitPlayground.setPixelColor(0, 40,   0, 40);
    delay(30);
CircuitPlayground.clearPixels();
  
}
  


//NEUTRAL BEND
if(accRaw.y < 9000 &&  accRaw.y > -9000 && CircuitPlayground.motionY() >7 && accRaw.x < -16000 && abs(gyrRaw.x) < 7000){

        strip.clear();
      strip.show();
      CircuitPlayground.clearPixels();
          delay(30);
    CircuitPlayground.setPixelColor(9, 40,   0, 40);
    CircuitPlayground.setPixelColor(0, 40,  0, 40);
    delay(30);
CircuitPlayground.clearPixels();
    delay(30);
CircuitPlayground.setPixelColor(8, 40,   0, 40);
CircuitPlayground.setPixelColor(1, 40,   0, 40);
    delay(30);
CircuitPlayground.clearPixels();
delay(30);
CircuitPlayground.setPixelColor(7, 40,   0, 40);
CircuitPlayground.setPixelColor(2, 40,   0, 40);
    delay(30);
CircuitPlayground.clearPixels();
delay(30);
CircuitPlayground.setPixelColor(6, 40,   0, 40);
CircuitPlayground.setPixelColor(3, 40,   0, 40);
    delay(30);
CircuitPlayground.clearPixels();
delay(30);
CircuitPlayground.setPixelColor(5, 40,  0, 40);
    CircuitPlayground.setPixelColor(4, 40,   0, 40);
    delay(30);
CircuitPlayground.clearPixels();
}


//SKY
if(accRaw.y > 9000 && CircuitPlayground.motionY() > 7 &&  abs(gyrRaw.x) < 7000){

        strip.clear();
      strip.show();
        strip.setPixelColor(0,   255,   40, 0);
      delay(15);
      strip.show();
              strip.clear();
                    delay(15);
      strip.show();
  strip.setPixelColor(1,   255,   40, 0);
      delay(15);
      strip.show();
              strip.clear();
                    delay(15);
      strip.show();
  strip.setPixelColor(2, 255,   40, 0);
      delay(15);
      strip.show();
              strip.clear();
                    delay(15);
      strip.show();
  strip.setPixelColor(3,  255,   40, 0);
      delay(15);
      strip.show();
              strip.clear();
                    delay(15);
      strip.show();
  strip.setPixelColor(4,  255,   40, 0);
      delay(15);
      strip.show();
              strip.clear();
                    delay(15);
      strip.show();
  strip.setPixelColor(5,  255,   40, 0);
      delay(15);
      strip.show();
              strip.clear();
                    delay(15);
      strip.show();
  strip.setPixelColor(6,  255,   40, 0);
      delay(15);
      strip.show();
              strip.clear();
                    delay(15);
      strip.show();
  strip.setPixelColor(7,  255,   40, 0);
      strip.show();
              strip.clear();
                    delay(15);
      strip.show();
      CircuitPlayground.clearPixels();
          delay(30);
    CircuitPlayground.setPixelColor(5, 255,   40, 0);
    CircuitPlayground.setPixelColor(4, 255,   40, 0);
    delay(30);
CircuitPlayground.clearPixels();
    delay(30);
CircuitPlayground.setPixelColor(6, 255,   40, 0);
CircuitPlayground.setPixelColor(3, 255,   40, 0);
    delay(30);
CircuitPlayground.clearPixels();
delay(30);
CircuitPlayground.setPixelColor(7, 255,   40, 0);
CircuitPlayground.setPixelColor(2, 255,   40, 0);
    delay(30);
CircuitPlayground.clearPixels();
delay(30);
CircuitPlayground.setPixelColor(8, 255,   40, 0);
CircuitPlayground.setPixelColor(1, 255,   40, 0);
    delay(30);
CircuitPlayground.clearPixels();
delay(30);
CircuitPlayground.setPixelColor(9, 255,   40, 0);
    CircuitPlayground.setPixelColor(0, 255,   40, 0);
    delay(30);
CircuitPlayground.clearPixels();
  
}


//SKY BEND
if(accRaw.y > 9000 && CircuitPlayground.motionY() < 6 &&  abs(gyrRaw.x) < 7000){

        strip.clear();
      strip.show();
      CircuitPlayground.clearPixels();
          delay(30);
    CircuitPlayground.setPixelColor(5, 255,   40, 0);
    CircuitPlayground.setPixelColor(4, 255,   40, 0);
    delay(30);
CircuitPlayground.clearPixels();
    delay(30);
CircuitPlayground.setPixelColor(6, 255,   40, 0);
CircuitPlayground.setPixelColor(3, 255,   40, 0);
    delay(30);
CircuitPlayground.clearPixels();
delay(30);
CircuitPlayground.setPixelColor(7, 255,   40, 0);
CircuitPlayground.setPixelColor(2, 255,   40, 0);
    delay(30);
CircuitPlayground.clearPixels();
delay(30);
CircuitPlayground.setPixelColor(8, 255,   40, 0);
CircuitPlayground.setPixelColor(1, 255,   40, 0);
    delay(30);
CircuitPlayground.clearPixels();
delay(30);
CircuitPlayground.setPixelColor(9, 255,   40, 0);
    CircuitPlayground.setPixelColor(0, 255,   40, 0);
    delay(30);
CircuitPlayground.clearPixels();
  
}

//GROUND
if(accRaw.y < -9000 && CircuitPlayground.motionY() < -7 && abs(gyrRaw.x) < 7000){

        strip.clear();
      strip.show();
        strip.setPixelColor(0,   0,   90, 0);
      delay(15);
      strip.show();
              strip.clear();
                    delay(15);
      strip.show();
  strip.setPixelColor(1,    0,   90, 0);
      delay(15);
      strip.show();
              strip.clear();
                    delay(15);
      strip.show();
  strip.setPixelColor(2,  0,   90, 0);
      delay(15);
      strip.show();
              strip.clear();
                    delay(15);
      strip.show();
  strip.setPixelColor(3,   0,   90, 0);
      delay(15);
      strip.show();
              strip.clear();
                    delay(15);
      strip.show();
  strip.setPixelColor(4,   0,   90, 0);
      delay(15);
      strip.show();
              strip.clear();
                    delay(15);
      strip.show();
  strip.setPixelColor(5,   0,   90, 0);
      delay(15);
      strip.show();
              strip.clear();
                    delay(15);
      strip.show();
  strip.setPixelColor(6,   0,   90, 0);
      delay(15);
      strip.show();
              strip.clear();
                    delay(15);
      strip.show();
  strip.setPixelColor(7,   0,   90, 0);
      strip.show();
              strip.clear();
                    delay(15);
      strip.show();
      CircuitPlayground.clearPixels();
          delay(30);
    CircuitPlayground.setPixelColor(5,  0,   90, 0);
    CircuitPlayground.setPixelColor(4,  0,   90, 0);
    delay(30);
CircuitPlayground.clearPixels();
    delay(30);
CircuitPlayground.setPixelColor(6,  0,   90, 0);
CircuitPlayground.setPixelColor(3,  0,   90, 0);
    delay(30);
CircuitPlayground.clearPixels();
delay(30);
CircuitPlayground.setPixelColor(7,  0,   90, 0);
CircuitPlayground.setPixelColor(2,  0,   90, 0);
    delay(30);
CircuitPlayground.clearPixels();
delay(30);
CircuitPlayground.setPixelColor(8,  0,   90, 0);
CircuitPlayground.setPixelColor(1,  0,   90, 0);
    delay(30);
CircuitPlayground.clearPixels();
delay(30);
CircuitPlayground.setPixelColor(9,  0,   90, 0);
    CircuitPlayground.setPixelColor(0,  0,   90, 0);
    delay(30);
CircuitPlayground.clearPixels();
  
}

//GROUND BEND
if(accRaw.y < -9000 && CircuitPlayground.motionY() > -7 && abs(gyrRaw.x) < 7000){

        strip.clear();
      strip.show();
      CircuitPlayground.clearPixels();
          delay(30);
    CircuitPlayground.setPixelColor(5,  0,   90, 0);
    CircuitPlayground.setPixelColor(4,  0,   90, 0);
    delay(30);
CircuitPlayground.clearPixels();
    delay(30);
CircuitPlayground.setPixelColor(6,  0,   90, 0);
CircuitPlayground.setPixelColor(3,  0,   90, 0);
    delay(30);
CircuitPlayground.clearPixels();
delay(30);
CircuitPlayground.setPixelColor(7,  0,   90, 0);
CircuitPlayground.setPixelColor(2,  0,   90, 0);
    delay(30);
CircuitPlayground.clearPixels();
delay(30);
CircuitPlayground.setPixelColor(8,  0,   90, 0);
CircuitPlayground.setPixelColor(1,  0,   90, 0);
    delay(30);
CircuitPlayground.clearPixels();
delay(30);
CircuitPlayground.setPixelColor(9,  0,   90, 0);
    CircuitPlayground.setPixelColor(0,  0,   90, 0);
    delay(30);
CircuitPlayground.clearPixels();
  
}


else{

//LEFT TURN
if(gyrRaw.x <(-7000) && CircuitPlayground.motionY() < 7){
   Serial.println("left turn");
      CircuitPlayground.setPixelColor(5, 0,   0, 0);
CircuitPlayground.setPixelColor(6, 0,   0, 0);
CircuitPlayground.setPixelColor(7, 0,   0, 0);
CircuitPlayground.setPixelColor(8, 0,  0, 0);
CircuitPlayground.setPixelColor(9, 0,  0, 0);

  strip.setPixelColor(0,   20,   0, 0);
      delay(35);
      strip.show();
  strip.setPixelColor(1,   20,   0, 0);
      delay(35);
      strip.show();
  strip.setPixelColor(2,   20,   0, 0);
      delay(35);
      strip.show();
  strip.setPixelColor(3,   20,   0, 0);
      delay(35);
      strip.show();
  strip.setPixelColor(4,   20,   0, 0);
      delay(35);
      strip.show();
  strip.setPixelColor(5,   20,   0, 0);
      delay(35);
      strip.show();
  strip.setPixelColor(6,   20,   0, 0);
      delay(35);
      strip.show();
  strip.setPixelColor(7,   20,   0, 0);
      strip.show();

    CircuitPlayground.setPixelColor(4, 40,   0, 0);
    delay(50);
CircuitPlayground.setPixelColor(3, 40,   0, 0);
delay(50);
CircuitPlayground.setPixelColor(2, 40,   0, 0);
delay(50);
CircuitPlayground.setPixelColor(1, 40,   0, 0);
delay(50);
CircuitPlayground.setPixelColor(0, 40,  0, 0);
}
//LEFT TURN HALF ARM
if(CircuitPlayground.motionY() > 7 && gyrRaw.x <(-7000)){
      strip.clear();
      strip.show();
      CircuitPlayground.clearPixels();
    CircuitPlayground.setPixelColor(0, 40,   0, 0);
    delay(50);
CircuitPlayground.setPixelColor(1, 40,   0, 0);
delay(50);
CircuitPlayground.setPixelColor(2, 40,   0, 0);
delay(50);
CircuitPlayground.setPixelColor(3, 40,   0, 0);
delay(50);
CircuitPlayground.setPixelColor(4, 40,  0, 0);
}

// RIGHT TURN
if(gyrRaw.x >(7000)&& CircuitPlayground.motionY() < 7){
   Serial.println("right turn");

   CircuitPlayground.setPixelColor(0, 0,   0, 0);
CircuitPlayground.setPixelColor(1, 0,   0, 0);
CircuitPlayground.setPixelColor(2, 0,   0, 0);
CircuitPlayground.setPixelColor(3, 0,  0, 0);
CircuitPlayground.setPixelColor(4, 0,  0, 0);
  strip.setPixelColor(0,   0,   0, 20);
      delay(35);
      strip.show();
  strip.setPixelColor(1,   0,   0, 20);
      delay(35);
      strip.show();
  strip.setPixelColor(2,   0,   0, 20);
      delay(35);
      strip.show();
  strip.setPixelColor(3,   0,   0, 20);
      delay(35);
      strip.show();
  strip.setPixelColor(4,   0,   0, 20);
      delay(35);
      strip.show();
  strip.setPixelColor(5,   0,   0, 20);
      delay(35);
      strip.show();
  strip.setPixelColor(6,   0,   0, 20);
      delay(35);
      strip.show();
  strip.setPixelColor(7,   0,   0, 20);
      strip.show();
  // but for the external strip, must call show()
    CircuitPlayground.setPixelColor(5, 0,   0, 40);
    delay(50);
CircuitPlayground.setPixelColor(6, 0,   0, 40);
delay(50);
CircuitPlayground.setPixelColor(7, 0,   0, 40);
delay(50);
CircuitPlayground.setPixelColor(8, 0,   0, 40);
delay(50);
CircuitPlayground.setPixelColor(9, 0,  0, 40);
}

//RIGHT TURN HALF ARM
if(CircuitPlayground.motionY() > 7 && gyrRaw.x >(7000)){
      strip.clear();
      strip.show();
      CircuitPlayground.clearPixels();
    CircuitPlayground.setPixelColor(9, 0,   0, 40);
    delay(50);
CircuitPlayground.setPixelColor(8, 0,   0, 40);
delay(50);
CircuitPlayground.setPixelColor(7, 0,   0, 40);
delay(50);
CircuitPlayground.setPixelColor(6, 0,   0, 40);
delay(50);
CircuitPlayground.setPixelColor(5, 0,  0, 40);
  
}   

}

//SERIAL MONITOR
  Serial.println("Acceleration raw values without offset:");
  Serial.print(accRaw.x);
  Serial.print("   ");
  Serial.print(accRaw.y);
  Serial.println("   ");
//  Serial.println(accRaw.z);

  Serial.println("Gyroscope raw values without offset:");
  Serial.print(gyrRaw.x);
  Serial.print("   ");
  Serial.print(gyrRaw.y);
  Serial.print("   ");
  Serial.println(gyrRaw.z);

    Serial.println(CircuitPlayground.motionX());
    Serial.println(CircuitPlayground.motionY());
      Serial.println(CircuitPlayground.motionZ());
      Serial.println("left");
      Serial.println(SideWaysLeft);
      Serial.println("middle");
      Serial.println(Centre);
      Serial.println("right");
      Serial.println(SideWaysRight);


//  Serial.println("Acceleration raw values with offset:");
//  Serial.print(corrAccRaw.x);
//  Serial.print("   ");
//  Serial.print(corrAccRaw.y);
//  Serial.print("   ");
//  Serial.println(corrAccRaw.z);

//  Serial.println("Gyroscope raw values with offset:");
//  Serial.print(corrGyrRaw.x);
//  Serial.print("   ");
//  Serial.print(corrGyrRaw.y);
//  Serial.print("   ");
//  Serial.println(corrGyrRaw.z);

  delay(200);
}
